{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minhk\\\\Documents\\\\GitHub\\\\CNLTHD\\\\01-starting-setup\\\\src\\\\OnTypeEx.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Temp from \"./Temp\";\nimport \"./OnTypeEx.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OnTypeEx = props => {\n  _s();\n\n  const [submitedText, setSubmitedText] = useState(\"\");\n  const [onChangeTextField, setOnChangeTextField] = useState(\"This text should be changed on typing\");\n  const [onSumbitTextField, setOnSumbitTextField] = useState(\"This text should be changed on submit\");\n  const [onOverTextField, setOnOverTextField] = useState(\"This text should be changed on hover\");\n\n  const OnType = event => {\n    setOnChangeTextField(event.target.value);\n  };\n\n  const Onsubmit = event => {\n    event.preventDefault();\n    setOnSumbitTextField(onChangeTextField);\n  };\n\n  const Onover = () => {\n    setOnOverTextField(\"Changed\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Temp, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        de: true,\n        onSubmit: Onsubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: OnType,\n          placeholder: \"Type here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Temp, {\n      className: \"temp_display\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-color_on-change\",\n        children: onChangeTextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-color_on-submit\",\n        children: onSumbitTextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onPointerOver: Onover,\n        className: \"text-color_on-hover\",\n        children: onOverTextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Temp, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submited Test:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_s(OnTypeEx, \"3P14FnDMbrx1Qx158OozBS12lx0=\");\n\n_c = OnTypeEx;\nexport default OnTypeEx;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnTypeEx\");","map":{"version":3,"sources":["C:/Users/minhk/Documents/GitHub/CNLTHD/01-starting-setup/src/OnTypeEx.js"],"names":["React","useState","Temp","OnTypeEx","props","submitedText","setSubmitedText","onChangeTextField","setOnChangeTextField","onSumbitTextField","setOnSumbitTextField","onOverTextField","setOnOverTextField","OnType","event","target","value","Onsubmit","preventDefault","Onover"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CACvD,uCADuD,CAA1D;AAGA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CACvD,uCADuD,CAA1D;AAGA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,sCAAD,CAAtD;;AAEA,QAAMY,MAAM,GAAIC,KAAD,IAAW;AACvBN,IAAAA,oBAAoB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AACF,GAFD;;AAIA,QAAMC,QAAQ,GAAIH,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACI,cAAN;AACAR,IAAAA,oBAAoB,CAACH,iBAAD,CAApB;AACF,GAHD;;AAKA,QAAMY,MAAM,GAAG,MAAM;AAClBP,IAAAA,kBAAkB,CAAC,SAAD,CAAlB;AACF,GAFD;;AAGA,sBACG;AAAA,4BACG,QAAC,IAAD;AAAA,6BACG;AAAM,QAAA,EAAE,MAAR;AAAS,QAAA,QAAQ,EAAEK,QAAnB;AAAA,gCACG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEJ,MAA7B;AAAqC,UAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA,iCACG;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH,eASG,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACG;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA,kBAAqCN;AAArC;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA,kBAAqCE;AAArC;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAG,QAAA,aAAa,EAAEU,MAAlB;AAA0B,QAAA,SAAS,EAAC,qBAApC;AAAA,kBACIR;AADJ;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YATH,eAgBG,QAAC,IAAD;AAAA,6BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAhBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAsBF,CA7CD;;GAAMR,Q;;KAAAA,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Temp from \"./Temp\";\r\nimport \"./OnTypeEx.css\";\r\n\r\nconst OnTypeEx = (props) => {\r\n   const [submitedText, setSubmitedText] = useState(\"\");\r\n\r\n   const [onChangeTextField, setOnChangeTextField] = useState(\r\n      \"This text should be changed on typing\"\r\n   );\r\n   const [onSumbitTextField, setOnSumbitTextField] = useState(\r\n      \"This text should be changed on submit\"\r\n   );\r\n   const [onOverTextField, setOnOverTextField] = useState(\"This text should be changed on hover\");\r\n\r\n   const OnType = (event) => {\r\n      setOnChangeTextField(event.target.value);\r\n   };\r\n\r\n   const Onsubmit = (event) => {\r\n      event.preventDefault();\r\n      setOnSumbitTextField(onChangeTextField);\r\n   };\r\n\r\n   const Onover = () => {\r\n      setOnOverTextField(\"Changed\");\r\n   };\r\n   return (\r\n      <div>\r\n         <Temp>\r\n            <form de onSubmit={Onsubmit}>\r\n               <input type=\"text\" onChange={OnType} placeholder=\"Type here\"></input>\r\n               <span>\r\n                  <button type=\"submit\">submit</button>\r\n               </span>\r\n            </form>\r\n         </Temp>\r\n         <Temp className=\"temp_display\">\r\n            <p className=\"text-color_on-change\">{onChangeTextField}</p>\r\n            <p className=\"text-color_on-submit\">{onSumbitTextField}</p>\r\n            <p onPointerOver={Onover} className=\"text-color_on-hover\">\r\n               {onOverTextField}\r\n            </p>\r\n         </Temp>\r\n         <Temp>\r\n            <h1>Submited Test:</h1>\r\n         </Temp>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default OnTypeEx;\r\n"]},"metadata":{},"sourceType":"module"}