{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minhk\\\\Documents\\\\GitHub\\\\CNLTHD\\\\01-starting-setup\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport OnTypeEx from \"./OnTypeEx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let temp = \"hello\";\n  const [number, setNumber] = useState(100);\n\n  const stateChange = () => {\n    if (number == 200) {\n      setNumber(100);\n    } else {\n      let tempNum = number + 1;\n      setNumber(tempNum);\n    }\n  };\n\n  const function1 = () => {\n    return \"shit\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(OnTypeEx, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"yIQe0CyPwVeZZEIQR+bVDBrzc7g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/minhk/Documents/GitHub/CNLTHD/01-starting-setup/src/App.js"],"names":["React","useState","OnTypeEx","App","temp","number","setNumber","stateChange","tempNum","function1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACf,MAAIC,IAAI,GAAG,OAAX;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,GAAD,CAApC;;AACA,QAAMM,WAAW,GAAG,MAAM;AACvB,QAAIF,MAAM,IAAI,GAAd,EAAmB;AAChBC,MAAAA,SAAS,CAAC,GAAD,CAAT;AACF,KAFD,MAEO;AACJ,UAAIE,OAAO,GAAGH,MAAM,GAAG,CAAvB;AACAC,MAAAA,SAAS,CAACE,OAAD,CAAT;AACF;AACH,GAPD;;AASA,QAAMC,SAAS,GAAG,MAAM;AACrB,WAAO,MAAP;AACF,GAFD;;AAIA,sBACG;AAAA,2BACG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CArBD;;GAAMN,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport OnTypeEx from \"./OnTypeEx\";\n\nconst App = () => {\n   let temp = \"hello\";\n   const [number, setNumber] = useState(100);\n   const stateChange = () => {\n      if (number == 200) {\n         setNumber(100);\n      } else {\n         let tempNum = number + 1;\n         setNumber(tempNum);\n      }\n   };\n\n   const function1 = () => {\n      return \"shit\";\n   };\n\n   return (\n      <div>\n         <OnTypeEx></OnTypeEx>\n      </div>\n   );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}